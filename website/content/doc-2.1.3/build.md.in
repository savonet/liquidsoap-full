# Liquidsoap @PACKAGE_VERSION@

## Forewords

Installing liquidsoap can be a difficult task. The software relies on a up-to date
`OCaml` compiler, as well as a bunch of `OCaml` modules and, for most of them, corresponding
C library dependencies.

Our recommended way of installing liquidsoap is via [opam](http://opam.ocaml.org/). `opam` can take
care of install the correct `OCaml` compiler, optional and required dependencies as well as system-specific
package dependencies.

The `opam` method is described in details in the [documentation](doc/content/install.md).
We recommend that any interested user head over to this link to install the software via `opam`.

The following of this document describes how to install the software via its `configure` script and is
intended either for system administrators or package maintainers.

## Dependencies

Below is a list of dependencies, mostly OCaml libraries. Optional libraries
provide extra features. They need to be detected by the `configure` script.

Most of the libraries are developed by the Savonet project and, in addition to
being available through traditional distribution channels, are bundled in the
[liquidsoap-&lt;version&gt;-full.tar.bz2](https://github.com/savonet/liquidsoap/releases)
tarballs for easier builds.

### Mandatory dependencies:

| Dependency     | Version                   |
| -------------- | ------------------------- |
| OCaml compiler | @ocaml_version_descr@     |
| ocaml-dtools   | @dtools_version_descr@    |
| ocaml-duppy    | @duppy_version_descr@     |
| ocaml-mm       | @mm_version_descr@        |
| ocaml-pcre     | @pcre_version_descr@      |
| menhir         | @menhirlib_version_descr@ |
| camomile       | @camomile_version_descr@  |
| ocurl          | @curl_version_descr@      |
| uri            | @uri_version_descr@       |
| sedlex         | @sedlex_version_descr@    |

### Recommended dependencies:

| Dependency       | Version                       | Functionality                         |
| ---------------- | ----------------------------- | ------------------------------------- |
| ocaml-ffmpeg     | @ffmpeg_version_descr@        | Comprehensive audio and video support |

### Optional dependencies:

| Dependency          | Version                              | Functionality                                 |
| ------------------- | ------------------------------------ | --------------------------------------------- |
| camlimages          | @camlimages_version_descr@           | Image decoding                                |
| gd4o                | @gd_version_descr@                   | Video.add_text() on servers without X         |
| memtrace            | @memtrace_version_descr@             | Memory usage debugging                        |
| memtrace            | @memtrace_version_descr@             | Memory usage debugging                        |
| ocaml-alsa          | @alsa_version_descr@                 | ALSA I/O                                      |
| ocaml-ao            | @ao_version_descr@                   | Output via libao                              |
| ocaml-bjack         | @bjack_version_descr@                | Jack support                                  |
| ocaml-cry           | @cry_version_descr@                  | Sending to Shoutcast & Icecast                |
| ocaml-dssi          | @dssi_version_descr@                 | DSSI sound synthesis                          |
| ocaml-faad          | @faad_version_descr@                 | AAC stream decoding                           |
| ocaml-fdkaac        | @fdkaac_version_descr@               | AAC(+) encoding                               |
| ocaml-flac          | @flac_version_descr@                 | Flac and Ogg/Flac codec                       |
| ocaml-frei0r        | @frei0r_version_descr@               | Frei0r plugins                                |
| ocaml-gstreamer     | @gstreamer_version_descr@            | GStreamer input, output and encoding/decoding |
| ocaml-inotify       | @inotify_version_descr@              | Reloading playlists when changed              |
| ocaml-ladspa        | @ladspa_version_descr@               | LADSPA plugins                                |
| ocaml-lame          | @lame_version_descr@                 | MP3 encoding                                  |
| ocaml-lastfm        | @lastfm_version_descr@               | Lastfm scrobbling                             |
| ocaml-lilv          | @lilv_version_descr@                 | Lilv plugins                                  |
| ocaml-lo            | @lo_version_descr@                   | OSC (Open Sound Control) support              |
| ocaml-mad           | @mad_version_descr@                  | MP3 decoding                                  |
| ocaml-magic         | @magic_version_descr@                | File type detection                           |
| ocaml-mem_usage     | @mem_usage_version_descr@            | Memory usage information                      |
| ocaml-ogg           | @ogg_version_descr@                  | Ogg codecs                                    |
| ocaml-opus          | @opus_version_descr@                 | Ogg/Opus codec                                |
| ocaml-portaudio     | @portaudio_version_descr@            | Portaudio I/O                                 |
| ocaml-pulseaudio    | @pulseaudio_version_descr@           | PulseAudio I/O                                |
| ocaml-shine         | @shine_version_descr@                | Fixed-point MP3 encoding                      |
| ocaml-samplerate    | @samplerate_version_descr@           | Libsamplerate audio conversion                |
| ocaml-soundtouch    | @soundtouch_version_descr@           | Libsoundtouch's audio effects                 |
| ocaml-speex         | @speex_version_descr@                | Ogg/Speex codec                               |
| ocaml-srt           | @srt_version_descr@                  | SRT I/O                                       |
| ocaml-ssl           | @ssl_version_descr@                  | SSL/https support                             |
| ocaml-taglib        | @taglib_version_descr@               | MP3ID3 metadata access                        |
| ocaml-theora        | @theora_version_descr@               | Ogg/Theora codec                              |
| ocaml-vorbis        | @vorbis_version_descr@               | Ogg/Vorbis codec                              |
| ocaml-xmlplaylist   | @xmlplaylist_version_descr@          | XML-based playlist formats                    |
| osx-secure-transport| @osx_secure_transport_version_descr@ | SSL/https support via OSX's SecureTransport   |
| posix-time2         | @posix_time2_version_descr@          | High-resolution time/latency                  |
| tsdl                | @tsdl_version_descr@                 | Display videos                                |
| tsdl-image          | @tsdl_image_version_descr@           | Load images                                   |
| tsdl-tff            | @tsdl_ttf_version_descr@             | Render fonts                                  |

### Runtime optional dependencies:

| Dependency          | Functionality                                     |
| ------------------- | ------------------------------------------------- |
| awscli              | `s3://` and `polly://` protocol support           |
| ffmpeg              | external I/O, `replay_gain` level computation, .. |
| youtube-dl          | youtube video and playlist support                |


## Installing via configure

The build processus starts with by invoking the `configure` script:

```
% ./configure
```

If you want a complete installation of liquidsoap, enabling a production use of
liquidsoap as a daemon, you should pass `--with-user=<login>` and
`--with-group=<group>` options to indicate which user/group you have created for
liquidsoap.

Then, build the software:

```
% make
```

You can also generate the documentation for liquidsoap:

```
% make doc
```

It will generate the HTML documentation, including a version of the scripting
API reference corresponding to your configuration.

Then, you may proceed to the installation. You may need to be root for that.

```
% make install
```

This will not install files such as `/var/log/liquidsoap` unless you have provided
a user/group under which liquidsoap should be ran. This behavior can be
overridden by passing `INSTALL_DAEMON="yes"` (useful for preparing binary
packages).


If you need to run liquidsoap as a daemon, you can then have a look at
[liquidsoap-daemon](https://github.com/savonet/liquidsoap-daemon).
